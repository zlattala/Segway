timed csp SegwayRPEvents
csp-begin
	SegwayRPEvents = {| 
		Segway::angle.in,
		Segway::gyroX.in,
		Segway::gyroY.in,
		Segway::gyroZ.in,
		Segway::leftMotorVelocity.in,
		Segway::rightMotorVelocity.in,
		Segway::setLeftMotorSpeedCall,
		Segway::setRightMotorSpeedCall,
		Segway::disableInterruptsCall,
		Segway::enableInterruptsCall
	|}
csp-end

// After a call of disableInterrupts(), a call of enableInterrupts() immediately follows.
timed csp SequenceDisableInterruptsEnableInterrupts
csp-begin
	-- no timed section to ensure no intervening tock events occur
	SequenceDisableInterruptsEnableInterrupts =
		-- allow any events except disabling interrupts 
		-- (the assertion doesn't restrict the occurence of enabling interrupts except for when one is required to happen)
		([] e : diff(SegwayRPEvents, {| Segway::disableInterruptsCall |}) @ e -> SequenceDisableInterruptsEnableInterrupts)
		 []
		-- tock events are allowed except after disabling interrupts
		tock -> SequenceDisableInterruptsEnableInterrupts
		 []
		-- disableInterrupts() is immediately followed by enableInterrupts()
		Segway::disableInterruptsCall -> Segway::enableInterruptsCall -> SequenceDisableInterruptsEnableInterrupts
csp-end
	
timed assertion SequenceDisableInterruptsEnableInterrupts_refines: Segway refines SequenceDisableInterruptsEnableInterrupts
	in the traces model
	with constant ^P of AnglePID    set to 0,
	     constant D  of AnglePID    set to 0,
	     constant ^P of SpeedPID    set to 0,
	     constant I  of SpeedPID    set to 0 and
	     constant D  of RotationPID set to 1