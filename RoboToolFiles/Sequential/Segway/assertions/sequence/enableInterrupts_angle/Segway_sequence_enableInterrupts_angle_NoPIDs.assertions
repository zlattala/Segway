timed csp SegwayRPEvents
csp-begin
	SegwayRPEvents = {| 
		Segway::angle.in,
		Segway::gyroX.in,
		Segway::gyroY.in,
		Segway::gyroZ.in,
		Segway::leftMotorVelocity.in,
		Segway::rightMotorVelocity.in,
		Segway::setLeftMotorSpeedCall,
		Segway::setRightMotorSpeedCall,
		Segway::disableInterruptsCall,
		Segway::enableInterruptsCall
	|}
csp-end

// After a call of enableInterrupts(), an angle event immediately follows.
timed csp SequenceEnableInterruptsAngle
csp-begin
	-- no timed section to ensure no intervening tock events occur
	SequenceEnableInterruptsAngle =
		-- allow any events except enabling interrupts 
		-- (the assertion doesn't restrict the occurrence of angle except for when one is required to happen)
		([] e : diff(SegwayRPEvents, {| Segway::enableInterruptsCall |}) @ e -> SequenceEnableInterruptsAngle)
		 []
		-- tock events are allowed except after enabling interrupts
		tock -> SequenceEnableInterruptsAngle
		 []
		-- enableInterrupts() is immediately followed by angle
		Segway::enableInterruptsCall -> Segway::angle.in?x -> SequenceEnableInterruptsAngle
csp-end
	
timed assertion SequenceEnableInterruptsAngle_refines: Segway refines SequenceEnableInterruptsAngle
	in the traces model
	with constant ^P of AnglePID    set to 0,
	     constant D  of AnglePID    set to 0,
	     constant ^P of SpeedPID    set to 0,
	     constant I  of SpeedPID    set to 0 and
	     constant D  of RotationPID set to 0