timed csp SegwayRPEvents
csp-begin
	SegwayRPEvents = {| 
		Segway::angle.in,
		Segway::gyroX.in,
		Segway::gyroY.in,
		Segway::gyroZ.in,
		Segway::leftMotorVelocity.in,
		Segway::rightMotorVelocity.in,
		Segway::setLeftMotorSpeedCall,
		Segway::setRightMotorSpeedCall,
		Segway::disableInterruptsCall,
		Segway::enableInterruptsCall
	|}
csp-end

// define range from -maxAngle to maxAngle and its complement
timed csp AngleRange
csp-begin
	AngleRange = { -2..2 } 
csp-end
timed csp OutsideAngleRange
csp-begin
	OutsideAngleRange = diff(core_real, AngleRange)
csp-end

timed csp AngleInRange
csp-begin
	AngleInRange = { Segway::angle.in.x | x <- AngleRange}
csp-end

timed csp AngleOutsideRange
csp-begin
	AngleOutsideRange = { Segway::angle.in.x | x <- OutsideAngleRange}
csp-end

// When RotationPID::D is set to one (and all other PID constants are zero), 
// the first rotationUpdate-1 values set by each of setLeftMotorSpeed() and setRightMotorSpeed() are zero.
timed csp RotationPIDProp1
csp-begin
	Timed(OneStep) {
		RotationPIDProp1 = RotationPIDProp1Count(0, 0)
		
		RotationPIDProp1Count(lcount, rcount) =
			-- events other than setting motor speeds are unconstrained
			([] e : diff(SegwayRPEvents, {|Segway::setLeftMotorSpeedCall, Segway::setRightMotorSpeedCall|}) @ e -> RotationPIDProp1Count(lcount, rcount))
			 []
			-- the first rotationUpdate-1 settings of motor speeds must be zero
			(lcount < const_BalanceSTM_rotationUpdate-1) & Segway::setLeftMotorSpeedCall!0 -> RotationPIDProp1Count(lcount+1, rcount)
			 []
			(rcount < const_BalanceSTM_rotationUpdate-1) & Segway::setRightMotorSpeedCall!0 -> RotationPIDProp1Count(lcount, rcount+1)
			 []
			-- subsequent settings of motor speeds are unconstrained -- don't update count or the process will be infinite state
			(lcount >= const_BalanceSTM_rotationUpdate-1) & Segway::setLeftMotorSpeedCall?x -> RotationPIDProp1Count(lcount, rcount)
			 []
			(rcount >= const_BalanceSTM_rotationUpdate-1) & Segway::setRightMotorSpeedCall?x -> RotationPIDProp1Count(lcount, rcount)
		}
csp-end
timed assertion RotationPIDProp1_refines: Segway refines RotationPIDProp1
	in the traces model
	with constant ^P of AnglePID    set to 0,
	     constant D  of AnglePID    set to 0,
	     constant ^P of SpeedPID    set to 0,
	     constant I  of SpeedPID    set to 0 and
	     constant D  of RotationPID set to 1