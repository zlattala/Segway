
--NO LONGER USING SIMPLIFIED VERSION: JUST FOR SANITY CHECK NOW.
--Make simplified Version
--Not just 0, there is a chance it is something else? Or is that just meaning it is literally always 0. 
--It is always 0, that is good, if we change p to 1, this will fail. 
--This works with P = 1 and D = 0 but not P = 1 and D = 1. 
Simp_P_Segway = Segway::disableInterruptsCall -> Segway::enableInterruptsCall -> 
Segway::angle.in?x -> Segway::gyroX.in?x1 -> Segway::leftMotorVelocity.in?x2 ->
Segway::rightMotorVelocity.in?x3 -> Segway::gyroZ.in?x4 -> Segway::setLeftMotorSpeedCall.0 -> 
Segway::setRightMotorSpeedCall.0 -> Simp_P_Segway

--This is true. THIS PASSES. 20/08/23, passes. 
assert Simp_P_Segway [T= P_Segway
--This should be false. 
assert Simp_P_Segway [T= P_Segway_P1
--This is false. 
assert P_Segway [T= Simp_P_Segway

--This should be false, we want to find where it deadlocks. 
--This passes? So, need to check P2 for deadlocking, that might be where the problem lies. 
assert Simp_P_Segway [T= P_Segway_P3_Renamed